# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc/v1/ledger_objects.proto

require 'google/protobuf'

require 'rpc/v1/amount_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("rpc/v1/ledger_objects.proto", :syntax => :proto3) do
    add_message "rpc.v1.LedgerObject" do
      oneof :object do
        optional :account_root, :message, 1, "rpc.v1.AccountRoot"
        optional :ripple_state, :message, 2, "rpc.v1.RippleState"
        optional :offer, :message, 3, "rpc.v1.Offer"
        optional :signer_list, :message, 4, "rpc.v1.SignerList"
        optional :directory_node, :message, 5, "rpc.v1.DirectoryNode"
      end
    end
    add_message "rpc.v1.DirectoryNode" do
      optional :flags, :uint32, 1
      optional :root_index, :bytes, 2
      repeated :indexes, :bytes, 3
      optional :index_next, :uint64, 4
      optional :index_previous, :uint64, 5
      optional :owner, :string, 6
      optional :taker_pays_currency, :message, 7, "rpc.v1.Currency"
      optional :taker_pays_issuer, :bytes, 8
      optional :taker_gets_currency, :message, 9, "rpc.v1.Currency"
      optional :taker_gets_issuer, :bytes, 10
    end
    add_message "rpc.v1.SignerList" do
      optional :flags, :uint32, 1
      optional :previous_txn_id, :bytes, 2
      optional :previous_transaction_ledger_sequence, :uint32, 3
      optional :owner_node, :uint64, 4
      repeated :signer_entries, :message, 5, "rpc.v1.SignerEntry"
      optional :signer_list_id, :uint32, 6
      optional :signer_quorum, :uint32, 7
    end
    add_message "rpc.v1.SignerEntry" do
      optional :account, :message, 1, "rpc.v1.AccountAddress"
      optional :signer_weight, :uint32, 2
    end
    add_message "rpc.v1.AccountRoot" do
      optional :account, :message, 1, "rpc.v1.AccountAddress"
      optional :balance, :message, 2, "rpc.v1.XRPDropsAmount"
      optional :sequence, :uint32, 3
      optional :flags, :uint32, 4
      optional :owner_count, :uint32, 5
      optional :previous_transaction_id, :bytes, 6
      optional :previous_transaction_ledger_sequence, :uint32, 7
      optional :account_transaction_id, :bytes, 8
      optional :domain, :bytes, 9
      optional :email_hash, :bytes, 10
      optional :message_key, :bytes, 11
      optional :regular_key, :string, 12
      optional :tick_size, :uint32, 13
      optional :transfer_rate, :uint32, 14
    end
    add_message "rpc.v1.RippleState" do
      optional :balance, :message, 1, "rpc.v1.CurrencyAmount"
      optional :flags, :uint32, 2
      optional :low_limit, :message, 3, "rpc.v1.CurrencyAmount"
      optional :high_limit, :message, 4, "rpc.v1.CurrencyAmount"
      optional :low_node, :uint64, 5
      optional :high_node, :uint64, 6
      optional :low_quality_in, :uint32, 7
      optional :low_quality_out, :uint32, 8
      optional :high_quality_in, :uint32, 9
      optional :high_quality_out, :uint32, 10
      optional :previous_transaction_id, :bytes, 11
      optional :previous_transaction_ledger_sequence, :uint32, 12
    end
    add_message "rpc.v1.Offer" do
      optional :account, :string, 1
      optional :sequence, :uint32, 2
      optional :flags, :uint32, 3
      optional :taker_pays, :message, 4, "rpc.v1.CurrencyAmount"
      optional :taker_gets, :message, 5, "rpc.v1.CurrencyAmount"
      optional :book_directory, :bytes, 6
      optional :book_node, :uint64, 7
      optional :owner_node, :uint64, 8
      optional :expiration, :uint32, 9
      optional :previous_transaction_id, :bytes, 10
      optional :previous_transaction_ledger_sequence, :uint32, 11
    end
    add_enum "rpc.v1.LedgerEntryType" do
      value :LEDGER_ENTRY_TYPE_UNSPECIFIED, 0
      value :LEDGER_ENTRY_TYPE_ACCOUNT_ROOT, 1
      value :LEDGER_ENTRY_TYPE_AMENDMENTS, 2
      value :LEDGER_ENTRY_TYPE_CHECK, 3
      value :LEDGER_ENTRY_TYPE_DEPOSIT_PREAUTH, 4
      value :LEDGER_ENTRY_TYPE_DIRECTORY_NODE, 5
      value :LEDGER_ENTRY_TYPE_ESCROW, 6
      value :LEDGER_ENTRY_TYPE_FEE_SETTINGS, 7
      value :LEDGER_ENTRY_TYPE_LEDGER_HASHES, 8
      value :LEDGER_ENTRY_TYPE_OFFER, 9
      value :LEDGER_ENTRY_TYPE_PAY_CHANNEL, 10
      value :LEDGER_ENTRY_TYPE_RIPPLE_STATE, 11
      value :LEDGER_ENTRY_TYPE_SIGNER_LIST, 12
    end
  end
end

module Rpc
  module V1
    LedgerObject = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.LedgerObject").msgclass
    DirectoryNode = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.DirectoryNode").msgclass
    SignerList = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.SignerList").msgclass
    SignerEntry = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.SignerEntry").msgclass
    AccountRoot = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.AccountRoot").msgclass
    RippleState = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.RippleState").msgclass
    Offer = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.Offer").msgclass
    LedgerEntryType = Google::Protobuf::DescriptorPool.generated_pool.lookup("rpc.v1.LedgerEntryType").enummodule
  end
end
